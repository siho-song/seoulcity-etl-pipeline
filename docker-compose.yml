version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.6.4
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOOKEEPER_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: gkdldhdl/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LISTENERS: INTERNEL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNEL://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNEL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNEL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CREATE_TOPICS: seoulcity:3:1:delete,seoulcity_visual:3:1:delete
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  spark-master:
    container_name: spark-master
    image: gkdldhdl/spark:0.05
    restart: always
    ports:
      - "18080:18080"
    stdin_open: true
    tty: true

    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 17077
      SPARK_MASTER_WEBUI_PORT: 18080
    
    depends_on:
      - kafka
  
  spark-worker-1:

    container_name: spark-worker-1
    image: gkdldhdl/spark:0.05
    stdin_open: true
    tty: true
    ports:
      - "8081:8081"

    environment:
      SPARK_MODE: worker
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 17077
      SPARK_MASTER_WEBUI_PORT: 18080
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 4G
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_WORKER_PORT: 18081
    
    depends_on:
      - spark-master

  spark-worker-2:
    container_name: spark-worker-2
    image: gkdldhdl/spark:0.05
    stdin_open: true
    tty: true
    ports:
      - "8082:8082"
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 17077
      SPARK_MASTER_WEBUI_PORT: 18080
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 4G
      SPARK_WORKER_WEBUI_PORT: 8082
      SPARK_WORKER_PORT: 18082

    depends_on:
      - spark-master

  spark-worker-3:
    container_name: spark-worker-3
    image: gkdldhdl/spark:0.05
    stdin_open: true
    tty: true
    ports:
      - "8083:8083"
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 17077
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 4G
      SPARK_WORKER_WEBUI_PORT: 8083
      SPARK_WORKER_PORT: 18083

    depends_on:
      - spark-master
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - ./env_file.env
    environment:
      TZ: Asia/Seoul

    volumes:
      - ./mongo/docker-entrypoint-initdb.d/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      # - ./mongo_data:/data/db
  
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on: 
        - mongodb
    ports:
      - "27018:8081"
    
    env_file:
      - ./env_file.env
   

  notebook:
    image: jupyter/pyspark-notebook 
    privileged: true
    restart: always
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks/work:/home/jovyan/work
    environment:
      GRANT_SUDO: yes

networks:
  default:
    name: seoulcity-net
    external: true

